{"version":3,"sources":["utils/react.tsx","home/home.tsx","App.tsx","index.tsx"],"names":["BindMemberMethods","componentPrototype","thisArg","Object","getOwnPropertyNames","forEach","methodName","bind","Home","_React$Component","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","prototype","assertThisInitialized","inherits","createClass","key","value","react","className","React","App","state","MenuIsOpen","HashRouter","Switch","Route","exact","path","component","render","render404","Link","to","ReactDOM","react_default","a","createElement","src_App","document","getElementById"],"mappings":"kRAQO,SAASA,EAA6CC,EAAuBC,GACnFC,OAAOC,oBAAoBH,GAAoBI,QAAQ,SAACC,GACtDJ,EAAgBI,GAAeJ,EAAgBI,GAAYC,KAAKL,KCP5D,IAAMM,EAAb,SAAAC,GACC,SAAAD,EAAYE,GAAW,IAAAC,EAAA,OAAAR,OAAAS,EAAA,EAAAT,CAAAU,KAAAL,GACtBG,EAAAR,OAAAW,EAAA,EAAAX,CAAAU,KAAAV,OAAAY,EAAA,EAAAZ,CAAAK,GAAAQ,KAAAH,KAAMH,IACNV,EAAkBQ,EAAKS,UAANd,OAAAe,EAAA,EAAAf,CAACA,OAAAe,EAAA,EAAAf,CAAAQ,KAFIA,EADxB,OAAAR,OAAAgB,EAAA,EAAAhB,CAAAK,EAAAC,GAAAN,OAAAiB,EAAA,EAAAjB,CAAAK,EAAA,EAAAa,IAAA,SAAAC,MAAA,WAOE,OACCC,EAAA,yBACCA,EAAA,wBAAQC,UAAU,cACjBD,EAAA,0CACAA,EAAA,8DAXLf,EAAA,CAA0BiB,aCsCXC,cA/Bd,SAAAA,EAAYhB,GAAW,IAAAC,EAAA,OAAAR,OAAAS,EAAA,EAAAT,CAAAU,KAAAa,IACtBf,EAAAR,OAAAW,EAAA,EAAAX,CAAAU,KAAAV,OAAAY,EAAA,EAAAZ,CAAAuB,GAAAV,KAAAH,KAAMH,KACDiB,MAAQ,CACZC,YAAY,GAEb5B,EAAkB0B,EAAIT,UAALd,OAAAe,EAAA,EAAAf,CAACA,OAAAe,EAAA,EAAAf,CAAAQ,KALIA,wEAStB,OACCY,EAAA,cAACM,EAAA,EAAD,KACCN,EAAA,qBAAKC,UAAU,OACdD,EAAA,cAACO,EAAA,EAAD,KACCP,EAAA,cAACQ,EAAA,EAAD,CAAOC,OAAO,EAAMC,KAAK,IAAIC,UAAW1B,IACxCe,EAAA,cAACQ,EAAA,EAAD,CAAOI,OAAQtB,KAAKuB,iDAOP1B,GACjB,OACCa,EAAA,qBAAKC,UAAU,cAAf,iBAECD,EAAA,cAACc,EAAA,EAAD,CAAMb,UAAU,aAAac,GAAG,KAAhC,gBA1Bcb,aCJlBc,IAASJ,OAAOK,EAAAC,EAAAC,cAACC,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.466b8c90.chunk.js","sourcesContent":["import * as React from 'react';\n\n/**\n * Bind member Methods since their `this` will need to be bound so they work when events are triggered\n * @param componentPrototype The prototype of the component we want to bind the members of.\n * It is basically `MyComponent.prototype`\n * @param thisArg The current instance of the component. Pass `this`.\n */\nexport function BindMemberMethods<T extends React.Component>(componentPrototype: T, thisArg: T): void {\n\tObject.getOwnPropertyNames(componentPrototype).forEach((methodName) => {\n\t\t(thisArg as any)[methodName] = (thisArg as any)[methodName].bind(thisArg);\n\t});\n}\n","import * as React from 'react';\nimport { BindMemberMethods } from '../utils/react';\n\nexport class Home extends React.Component {\n\tconstructor(props: {}) {\n\t\tsuper(props);\n\t\tBindMemberMethods(Home.prototype, this);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<header className=\"App-header\">\n\t\t\t\t\t<p> Reza Teshnizi </p>\n\t\t\t\t\t<p> Content will be added here! </p>\n\t\t\t\t</header>\n\t\t\t</div>\n\t\t);\n\t}\n}","import * as React from 'react';\nimport { HashRouter as Router, Link, Route, RouteComponentProps, Switch } from 'react-router-dom';\nimport { BindMemberMethods } from './utils/react';\nimport { Home } from './home/home';\n\ninterface AppState {\n\tMenuIsOpen: boolean;\n}\n\nclass App extends React.Component<{}, AppState> {\n\tconstructor(props: {}) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tMenuIsOpen: false,\n\t\t};\n\t\tBindMemberMethods(App.prototype, this);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Router>\n\t\t\t\t<div className=\"App\">\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route exact={true} path=\"/\" component={Home} />\n\t\t\t\t\t\t<Route render={this.render404} />\n\t\t\t\t\t</Switch>\n\t\t\t\t</div>\n\t\t\t</Router>\n\t\t);\n\t}\n\n\tprivate render404(props: RouteComponentProps): React.ReactNode {\n\t\treturn (\n\t\t\t<div className=\"App-header\">\n\t\t\t\tPage Not Found\n\t\t\t\t<Link className=\"App-header\" to=\"/\">Home</Link>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}